version: 2.1

defaults:
  image: &image circleci/node:6
  node_modules_cache_key: &node_modules_cache_key v1-{{ checksum "package-lock.json" }}
  restore_node_modules: &restore_node_modules
    restore_cache:
      keys:
        - *node_modules_cache_key

orbs:
  aws-cli: circleci/aws-cli@0.1.1
  aws-ecr: circleci/aws-ecr@3.0.0

jobs:
  build:
    docker:
      - image: *image
    steps:
      - checkout
      - run: make node_modules
      - save_cache:
          key: *node_modules_cache_key
          paths:
            - node_modules
  test:
    docker:
      - image: *image
    steps:
      - checkout
      - *restore_node_modules
      - run: echo todo
  deploy:
    docker:
      - image: circleci/python
        environment:
          CONTAINER_NAME: specs
          ECR_URL: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
    steps:
      - checkout
      - *restore_node_modules
      - setup_remote_docker
      - aws-cli/install
      - aws-cli/configure
      - run: echo $ECR_URL
      - aws-ecr/ecr-login
      - run:
          name: build, push on docker hub and ECR
          command: |
            echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin
            docker build -t segment/${CONTAINER_NAME}:${CIRCLE_BUILD_NUM} -t segment/${CONTAINER_NAME}:latest -t ${ECR_URL}/${CONTAINER_NAME}:latest .
            docker push segment/${CONTAINER_NAME}:latest
            docker push ${ECR_URL}/${CONTAINER_NAME}:latest
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - circleciv2